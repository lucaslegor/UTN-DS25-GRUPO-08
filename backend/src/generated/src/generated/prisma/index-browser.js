
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.14.0
 * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
 */
Prisma.prismaVersion = {
  client: "6.14.0",
  engine: "717184b7b35ea05dfa71a3236b7af656013e1e49"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  username: 'username',
  mail: 'mail',
  passwordHash: 'passwordHash',
  rol: 'rol',
  createdAt: 'createdAt'
};

exports.Prisma.AdminProfileScalarFieldEnum = {
  idAdmin: 'idAdmin',
  idUsuario: 'idUsuario',
  nombre: 'nombre',
  email: 'email',
  telefono: 'telefono',
  activo: 'activo',
  createdAt: 'createdAt'
};

exports.Prisma.ProductoScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  descripcion: 'descripcion',
  precio: 'precio',
  cobertura: 'cobertura',
  tipo: 'tipo',
  isActive: 'isActive',
  createdAt: 'createdAt',
  imagenUrl: 'imagenUrl'
};

exports.Prisma.PolizaScalarFieldEnum = {
  id: 'id',
  idPedido: 'idPedido',
  archivoUrl: 'archivoUrl',
  estado: 'estado',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PedidoItemScalarFieldEnum = {
  idProducto: 'idProducto',
  idPedido: 'idPedido',
  titulo: 'titulo',
  precio: 'precio',
  cantidad: 'cantidad'
};

exports.Prisma.PedidoScalarFieldEnum = {
  id: 'id',
  idUsuario: 'idUsuario',
  subtotal: 'subtotal',
  total: 'total',
  moneda: 'moneda',
  estado: 'estado',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CarritoItemScalarFieldEnum = {
  idProducto: 'idProducto',
  idCarrito: 'idCarrito',
  cantidad: 'cantidad'
};

exports.Prisma.CarritoScalarFieldEnum = {
  id: 'id',
  total: 'total',
  moneda: 'moneda',
  updatedAt: 'updatedAt'
};

exports.Prisma.PagoScalarFieldEnum = {
  id: 'id',
  idPedido: 'idPedido',
  pasarela: 'pasarela',
  estado: 'estado',
  monto: 'monto',
  moneda: 'moneda',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.RolUsuario = exports.$Enums.RolUsuario = {
  ADMINISTRADOR: 'ADMINISTRADOR',
  USUARIO: 'USUARIO'
};

exports.TipoSeguro = exports.$Enums.TipoSeguro = {
  AUTO: 'AUTO',
  HOGAR: 'HOGAR',
  VIDA: 'VIDA',
  SALUD: 'SALUD'
};

exports.EstadoPoliza = exports.$Enums.EstadoPoliza = {
  PENDIENTE: 'PENDIENTE',
  CARGADA: 'CARGADA'
};

exports.Moneda = exports.$Enums.Moneda = {
  ARS: 'ARS'
};

exports.EstadoPedido = exports.$Enums.EstadoPedido = {
  CREADO: 'CREADO',
  PENDIENTE_POLIZA: 'PENDIENTE_POLIZA',
  POLIZA_CARGADA: 'POLIZA_CARGADA',
  PAGO_PENDIENTE: 'PAGO_PENDIENTE',
  PAGO_APROBADO: 'PAGO_APROBADO',
  PAGO_RECHAZADO: 'PAGO_RECHAZADO',
  CANCELADO: 'CANCELADO'
};

exports.PasarelaPago = exports.$Enums.PasarelaPago = {
  MERCADOPAGO: 'MERCADOPAGO'
};

exports.EstadoPago = exports.$Enums.EstadoPago = {
  CREADO: 'CREADO',
  PENDIENTE: 'PENDIENTE',
  APROBADO: 'APROBADO',
  RECHAZADO: 'RECHAZADO',
  CANCELADO: 'CANCELADO'
};

exports.Prisma.ModelName = {
  Usuario: 'Usuario',
  AdminProfile: 'AdminProfile',
  Producto: 'Producto',
  Poliza: 'Poliza',
  PedidoItem: 'PedidoItem',
  Pedido: 'Pedido',
  CarritoItem: 'CarritoItem',
  Carrito: 'Carrito',
  Pago: 'Pago'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
